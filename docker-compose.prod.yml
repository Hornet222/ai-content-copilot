version: '3.8'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - LLM_MODEL=${LLM_MODEL:-gpt-4o}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://content-copilot.railway.app,http://localhost:3000}
      - PORT=${PORT:-8000}
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://content-copilot-api.railway.app}
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://content-copilot-api.railway.app}
      - PORT=${FRONTEND_PORT:-3000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - backend

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-contentuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-contentpass}
      POSTGRES_DB: ${POSTGRES_DB:-contentdb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-contentuser} -d ${POSTGRES_DB:-contentdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata: 